<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="ImageLayout">

        <!-- The drawable to be used as the background for the view -->
        <attr name="image" format="reference" />

        <!-- The width of the image in which the layout coordinates of the children are expressed -->
        <attr name="imageWidth" format="integer" />

        <!-- The height of the image in which the layout coordinates of the children are expressed -->
        <attr name="imageHeight" format="integer" />

        <!-- Determines how the background image is drawn -->
        <attr name="fit">

            <!--
                 The image is made to fill the available vertical space, and may be cropped 
                 horizontal if there is not enough space. If there is too much horizontal space,
                 it is left blank. The horizontal position of the image is controlled by the 
                 android:gravity attribute
            -->
            <flag name="vertical" value="0" />
            <!--
                 The image fills the available horizontal space, and may be cropped 
                 vertically if there is not enough space. If there is too much vertical space,
                 it is left blank. The vertical position of the image is controlled by the 
                 android:gravity attribute
            -->
            <flag name="horizontal" value="1" />
            <!--
                 The image fills the available space both vertically and horizontally. If the
                 aspect ratio of the image does not match exactly the aspect ratio of the available
                 space, the image is cropped either vertically or horizontally, depending of which
                 provides the best fit
            -->
            <flag name="both" value="2" />
            <!--
                 This is the default value. The image fills the available space 
                 vertically in portrait mode and horizontally in landscape. Note that the
                 library does not determine the orientation based on the actual device 
                 orientation, but on the relative aspect ratios of the image and the view
            -->
            <flag name="auto" value="3" />
        </attr>
        <attr name="android:gravity" />
    </declare-styleable>

    <declare-styleable name="ImageLayout_Layout">
        <attr name="layout_width" format="integer" />
        <attr name="layout_height" format="integer" />
        <attr name="layout_maxWidth" format="integer" />
        <attr name="layout_maxHeight" format="integer" />
        <attr name="layout_centerX" format="integer" />
        <attr name="layout_centerY" format="integer" />
        <attr name="layout_left" format="integer" />
        <attr name="layout_top" format="integer" />
        <attr name="layout_right" format="integer" />
        <attr name="layout_bottom" format="integer" />
    </declare-styleable>

</resources>